e2e:  endpoint to endpoint


src-assets: static resources files, like images

add a new component steps: ng g component components/news 

1. ng g component components/news      // create components

2. in the app.module.ts file, it occurs the following declaration
import { HomeComponent } from './components/home/home.component';

ng serve --open    // run the program

in the news component folder:
1. in .ts file, define a variable title as below:
export class NewsComponent implements OnInit {
  title = 'I am a news component title';

  constructor() { }

  ngOnInit(): void {
  }q

}
2. then, in the html file, can use this variable, use{{}}
<p>I am a news component</p>
{{title}}


the components can be used in root component or other components.
<app-componentName></app-componentName>


*ngfFr  is used in data loop

write ocde in .ts file:  list=[1111,2222,3333];
in html file:

<ul>
    <li *ngFor="let item of list">
        {{item}}
    </li>
</ul>



// complex array list
 public cars: any[] = [
    {
      cate: 'BMW',
      list: [
        {
          title: 'x1',
          price: '300m'
        },
        {
          title: 'x2',
          price: '400m'
        },
        {
          title: 'x3',
          price: '500m'
        }
      ]
    },
    {
      cate: 'Audi',
      list: [
        {
          title: 'q1',
          price: '250m'
        },
        {
          title: 'q2',
          price: '350m'
        },
        {
          title: 'q3',
          price: '450m'
        }
      ]
    }
  ];

    <ul>
        <!--iterate the array list-->
        <li *ngFor="let item3 of cars">
            <h2>{{item3.cate}}</h2>
            <ol>
                <li *ngFor="let car of item3.list">
                    {{car.title}}--{{car.price}}
                </li>
            </ol>
        </li>
    </ul>
---------------------------------------
    <img src="assets/images/1.jpg" alt="cool">

    <div *ngIf="flag">  //*ngIf="true" or *ngIf="false"
    <img src="assets/images/1.jpg" alt="cool">
</div>
<div *ngIf="!flag">
    <img src="assets/images/2.jpg" alt="cool">
</div>
    ----------------
    <h1>iterate and display the list and index</h1>
<ul>
    <li *ngFor="let item of list; let key=index">
     <span *ngIf="key==1" class="red">
        {{key}}--{{item.title}}
     </span>  
     <span *ngIf="key!=1">
        {{key}}--{{item.title}}
     </span>  
    </li>
</ul>

------------- *ngSwitch
<div [ngSwitch]="orderStatus">
    <div *ngSwitchCase="1">paied</div>
    <div *ngSwitchCase="2">paied and confirmed order</div>
    <div *ngSwitchCase="3">sent</div>
    <div *ngSwitchCase="4">got</div>
    <div *ngSwitchCase="4">invalid</div>
    <div *ngSwitchDefault>paied</div>
</div>
----------------------*ngClass, ngStyle
<div [ngClass]="{'blue':!flag, 'red':flag}">
    ngClass
</div>

<strong> loop the list ,let the first one style is blue</strong>
<ul>
    <li *ngFor="let item of list; let key= index" [ngClass]="{'red': key==0, 'blue': key==1}">
        {{key}}--{{item.title}}
    </li>
</ul>
---------------
<h2>ngStyle</h2>
<p style="color: red;">I am a p tag</p>
<p [ngStyle]="{'color':'blue'}">I am a p tag</p>
-----------------
<h2>Pipe</h2>
{{today | date:'yyyy-MM-dd HH:mm ss'}}
---------------
<h2>event</h2>
<button (click)="run()">execute event</button>
<br><br>
<button (click)="getData()">execute event to get data of title</button>
<br><br>
<button (click)="updateData()">execute event to update data of title</button>
<h2>table form event</h2>
<input type="text" (keydown)="keyDown($event)" />
-------------------------------------

<h1>Two way Data binding  -MVVM</h1>
MVVM- Model changing affect View, View changing affect Model

firstly, we need to import FormsModule in the app.module.ts file

import { FormsModule} from '@angular/forms';

 imports: [
    BrowserModule,
    FormsModule
  ],

  in html PAGE:

<h1>Two way Data binding  -MVVM</h1>

<input type="text" [(ngModel)] = 'keywords' />
{{keywords}}

